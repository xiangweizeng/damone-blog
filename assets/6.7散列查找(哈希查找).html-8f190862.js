import{_ as l,a as t,b as n,c as i,d as o}from"./uTools_1638352359885-f4529103.js";import{_ as r,N as m,S as c,Z as e,U as a,a0 as s}from"./framework-b23b3642.js";const p="/damone-blog/images/data-structure/uTools_1638349184596.png",d="/damone-blog/images/data-structure/uTools_1638351041435.png",h="/damone-blog/images/data-structure/1638351182580.png",g="/damone-blog/images/data-structure/uTools_1638351362463.png",u="/damone-blog/images/data-structure/uTools_1638349467195.png",_="/damone-blog/images/data-structure/uTools_1638353226182.png",f="/damone-blog/images/data-structure/uTools_1638352393458.png",y="/damone-blog/images/data-structure/uTools_1638352677985.png",b="/damone-blog/images/data-structure/1638352873925.png",x="/damone-blog/images/data-structure/uTools_1638353359841.png",k={},T=e('<h1 id="_6-7-散列查找-哈希查找" tabindex="-1"><a class="header-anchor" href="#_6-7-散列查找-哈希查找" aria-hidden="true">#</a> 6.7 散列查找(哈希查找)</h1><figure><img src="'+p+'" alt="uTools_1638349184596" tabindex="0" loading="lazy"><figcaption>uTools_1638349184596</figcaption></figure><h2 id="_6-7-1-哈希查找的定义" tabindex="-1"><a class="header-anchor" href="#_6-7-1-哈希查找的定义" aria-hidden="true">#</a> 6.7.1 哈希查找的定义</h2><p><code>散列表</code>（Hash Table），又名<code>哈希表</code>，是一种数据结构。</p><p><code>特点</code>：数据元素的<code>关键字与其存储地址直接相关</code>。</p><p>通过<code>散列函数（哈希函数）</code>将关键字与存储地址一一映射。</p><p>散列查找是典型的<code>“用空间换时间”的算法</code></p><p><code>装填因子α</code> = 表中记录个数/散列表表长</p><p><code>查找效率</code>：取决于<code>散列函数</code>、<code>处理冲突的方法</code>、<code>装填因子α</code></p><figure><img src="'+l+'" alt="1638281466946" tabindex="0" loading="lazy"><figcaption>1638281466946</figcaption></figure><h2 id="_6-7-2-常见的散列函数-哈希函数" tabindex="-1"><a class="header-anchor" href="#_6-7-2-常见的散列函数-哈希函数" aria-hidden="true">#</a> 6.7.2 常见的散列函数（哈希函数）</h2><p>冲突是由散列函数导致的，<code>冲突越多，查找效率越低</code></p><p>散列函数的设计目的：让不同的关键字的冲突尽可能少。</p><ul><li>①除留余数法</li><li>②直接定址法</li><li>③数字分析法</li><li>④平方取中法</li></ul><h3 id="_1-除留余数法" tabindex="-1"><a class="header-anchor" href="#_1-除留余数法" aria-hidden="true">#</a> (1) 除留余数法</h3>',15),w=a("p",{class:"katex-block"},[a("span",{class:"katex-display"},[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("semantics",null,[a("mrow",null,[a("mi",null,"H"),a("mo",{stretchy:"false"},"("),a("mi",null,"k"),a("mi",null,"e"),a("mi",null,"y"),a("mo",{stretchy:"false"},")"),a("mo",null,"="),a("mi",null,"k"),a("mi",null,"e"),a("mi",null,"y"),a("mspace"),a("mspace",{width:"1em"}),a("mrow",null,[a("mi",{mathvariant:"normal"},"m"),a("mi",{mathvariant:"normal"},"o"),a("mi",{mathvariant:"normal"},"d")]),a("mtext",null," "),a("mtext",null," "),a("mi",null,"p")]),a("annotation",{encoding:"application/x-tex"}," H(key)=key\\mod{p} ")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"ey"),a("span",{class:"mclose"},")"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"ey"),a("span",{class:"mspace allowbreak"}),a("span",{class:"mspace",style:{"margin-right":"1em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),a("span",{class:"mord"},[a("span",{class:"mord"},[a("span",{class:"mord mathrm"},"mod")])]),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal"},"p")])])])])],-1),z=a("p",null,[s("除数p取法：散列表表长为m，取一个不大于m但最接近或等于m的"),a("code",null,"质数p")],-1),v=a("p",null,"查找方法：当p=13时，查找66，66%13=1，则在a[1]下的链表中寻找。",-1),M=a("p",null,[a("code",null,"查找效率分析"),s("：")],-1),H=a("figure",null,[a("img",{src:t,alt:"1638350479082",tabindex:"0",loading:"lazy"}),a("figcaption",null,"1638350479082")],-1),L=a("h3",{id:"_2-直接定址法",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-直接定址法","aria-hidden":"true"},"#"),s(" (2)直接定址法")],-1),N=a("p",null,[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"H"),a("mo",{stretchy:"false"},"("),a("mi",null,"k"),a("mi",null,"e"),a("mi",null,"y"),a("mo",{stretchy:"false"},")"),a("mo",null,"="),a("mi",null,"k"),a("mi",null,"e"),a("mi",null,"y")]),a("annotation",{encoding:"application/x-tex"},"H(key)=key")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"ey"),a("span",{class:"mclose"},")"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"ey")])])]),s(" 或 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"H"),a("mo",{stretchy:"false"},"("),a("mi",null,"k"),a("mi",null,"e"),a("mi",null,"y"),a("mo",{stretchy:"false"},")"),a("mo",null,"="),a("mi",null,"a"),a("mo",null,"∗"),a("mi",null,"k"),a("mi",null,"e"),a("mi",null,"y"),a("mo",null,"+"),a("mi",null,"b")]),a("annotation",{encoding:"application/x-tex"},"H(key)=a*key+b")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"ey"),a("span",{class:"mclose"},")"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4653em"}}),a("span",{class:"mord mathnormal"},"a"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"∗"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"ey"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"+"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"b")])])])],-1),j=e('<p>这种计算最简单，适合<code>关键字分布连续</code>的情况</p><figure><img src="'+d+'" alt="uTools_1638351041435" tabindex="0" loading="lazy"><figcaption>uTools_1638351041435</figcaption></figure><h3 id="_3-数字分析法" tabindex="-1"><a class="header-anchor" href="#_3-数字分析法" aria-hidden="true">#</a> (3)数字分析法</h3><p>选取数码<code>分布较为均匀的若干位</code>作为散列地址。</p><figure><img src="'+h+'" alt="1638351182580" tabindex="0" loading="lazy"><figcaption>1638351182580</figcaption></figure><h3 id="_4-平方取中法" tabindex="-1"><a class="header-anchor" href="#_4-平方取中法" aria-hidden="true">#</a> (4) 平方取中法</h3><p>取<code>关键字的平方值的中间几位</code>作为散列地址。</p><p>具体取多少位要视实际情况而定。这种方法得到的<code>散列地址与关键字的每位都有关系</code>，因此使得散列地址分布比较均匀，适用于关键字的每位取值都不够均匀或均小于散列地址所需的位数。</p><figure><img src="'+g+'" alt="uTools_1638351362463" tabindex="0" loading="lazy"><figcaption>uTools_1638351362463</figcaption></figure><h2 id="_6-7-3-处理冲突的方法" tabindex="-1"><a class="header-anchor" href="#_6-7-3-处理冲突的方法" aria-hidden="true">#</a> 6.7.3 处理冲突的方法</h2><ul><li>①拉链法</li><li>②开放定址法</li><li>③再散列法</li></ul><p>处理冲突的方法：以拉链法为主。</p><h3 id="_1-拉链法" tabindex="-1"><a class="header-anchor" href="#_1-拉链法" aria-hidden="true">#</a> (1)拉链法</h3><figure><img src="'+u+'" alt="uTools_1638349467195" tabindex="0" loading="lazy"><figcaption>uTools_1638349467195</figcaption></figure><h3 id="_2-开放定址法" tabindex="-1"><a class="header-anchor" href="#_2-开放定址法" aria-hidden="true">#</a> (2)开放定址法</h3><figure><img src="'+_+'" alt="uTools_1638353226182" tabindex="0" loading="lazy"><figcaption>uTools_1638353226182</figcaption></figure><p><code>d的不同取法</code>：</p><h4 id="_1线性探测法" tabindex="-1"><a class="header-anchor" href="#_1线性探测法" aria-hidden="true">#</a> ①线性探测法</h4><figure><img src="'+n+'" alt="uTools_1638352055034" tabindex="0" loading="lazy"><figcaption>uTools_1638352055034</figcaption></figure><figure><img src="'+i+'" alt="uTools_1638352323225" tabindex="0" loading="lazy"><figcaption>uTools_1638352323225</figcaption></figure><figure><img src="'+o+'" alt="uTools_1638352359885" tabindex="0" loading="lazy"><figcaption>uTools_1638352359885</figcaption></figure><figure><img src="'+f+'" alt="uTools_1638352393458" tabindex="0" loading="lazy"><figcaption>uTools_1638352393458</figcaption></figure><h4 id="_2平方探测法" tabindex="-1"><a class="header-anchor" href="#_2平方探测法" aria-hidden="true">#</a> ②平方探测法</h4>',23),B=a("p",null,[s("散列表长必须是"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mn",null,"4"),a("mi",null,"j"),a("mo",null,"+"),a("mn",null,"3")]),a("annotation",{encoding:"application/x-tex"},"4j+3")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.854em","vertical-align":"-0.1944em"}}),a("span",{class:"mord"},"4"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"+"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"3")])])])],-1),V=e('<figure><img src="'+y+'" alt="uTools_1638352677985" tabindex="0" loading="lazy"><figcaption>uTools_1638352677985</figcaption></figure><figure><img src="'+b+'" alt="1638352873925" tabindex="0" loading="lazy"><figcaption>1638352873925</figcaption></figure><h4 id="_3伪随机序列法" tabindex="-1"><a class="header-anchor" href="#_3伪随机序列法" aria-hidden="true">#</a> ③伪随机序列法</h4><p>d取随机值</p><h3 id="_3-再散列法" tabindex="-1"><a class="header-anchor" href="#_3-再散列法" aria-hidden="true">#</a> (3)再散列法</h3><figure><img src="'+x+'" alt="uTools_1638353359841" tabindex="0" loading="lazy"><figcaption>uTools_1638353359841</figcaption></figure>',6),S=[T,w,z,v,M,H,L,N,j,B,V];function E(U,Z){return m(),c("div",null,S)}const C=r(k,[["render",E],["__file","6.7散列查找(哈希查找).html.vue"]]);export{C as default};
