import{_ as n,a as t,b as e,c as l}from"./uTools_1638256324365-32f1a1b3.js";import{_ as o,N as p,S as i,Z as c,U as s,a0 as a}from"./framework-b23b3642.js";const r="/damone-blog/images/data-structure/uTools_1638256454841.png",m="/damone-blog/images/data-structure/uTools_1638256551359.png",u={},d=c(`<h1 id="_6-3-折半查找" tabindex="-1"><a class="header-anchor" href="#_6-3-折半查找" aria-hidden="true">#</a> 6.3 折半查找</h1><h2 id="_6-3-1-折半查找的定义" tabindex="-1"><a class="header-anchor" href="#_6-3-1-折半查找的定义" aria-hidden="true">#</a> 6.3.1 折半查找的定义</h2><p><code>折半查找</code>，又叫<code>二分查找</code>。仅适用于<code>有序的顺序表</code>。</p><h2 id="_6-3-2-折半查找的实现" tabindex="-1"><a class="header-anchor" href="#_6-3-2-折半查找的实现" aria-hidden="true">#</a> 6.3.2 折半查找的实现</h2><p><code>算法思想</code>：每次从中间分，判断自己是哪一半</p><p>普通代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">//查找表的数据结构（动态分配的顺序表）</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span><span class="token punctuation">{</span>
    ElemType <span class="token operator">*</span>elem<span class="token punctuation">;</span>      <span class="token comment">//指向“动态”分配的数组的指针</span>
    <span class="token keyword">int</span> TableLen<span class="token punctuation">;</span>        <span class="token comment">//查找表的当前长度</span>
<span class="token punctuation">}</span>SSTable<span class="token punctuation">;</span>
<span class="token comment">//折半查找</span>
<span class="token keyword">int</span> <span class="token function">Binary_Search</span><span class="token punctuation">(</span>SSTable L<span class="token punctuation">,</span> ElemType key<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> low <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> high <span class="token operator">=</span> L<span class="token punctuation">.</span>TableLen<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> mid<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>low <span class="token operator">&lt;=</span> high<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mid <span class="token operator">=</span> <span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>           <span class="token comment">//取中间值</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>L<span class="token punctuation">.</span>elem<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid<span class="token punctuation">;</span>                 <span class="token comment">//查找成功，则返回所在位置</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>L<span class="token punctuation">.</span>elem<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>
            high <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>             <span class="token comment">//从前半部分继续查</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>              <span class="token comment">//从后半部分继续查</span>
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                          <span class="token comment">//查找失败，返回-1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-3-3-查找效率分析" tabindex="-1"><a class="header-anchor" href="#_6-3-3-查找效率分析" aria-hidden="true">#</a> 6.3.3 查找效率分析</h2><figure><img src="`+n+'" alt="uTools_1638256115837" tabindex="0" loading="lazy"><figcaption>uTools_1638256115837</figcaption></figure><h2 id="_6-3-4-折半查找判定树的构造" tabindex="-1"><a class="header-anchor" href="#_6-3-4-折半查找判定树的构造" aria-hidden="true">#</a> 6.3.4 折半查找判定树的构造</h2><h3 id="构造" tabindex="-1"><a class="header-anchor" href="#构造" aria-hidden="true">#</a> 构造：</h3><figure><img src="'+t+'" alt="uTools_1638256209356" tabindex="0" loading="lazy"><figcaption>uTools_1638256209356</figcaption></figure><figure><img src="'+e+'" alt="uTools_1638256305668" tabindex="0" loading="lazy"><figcaption>uTools_1638256305668</figcaption></figure><figure><img src="'+l+'" alt="uTools_1638256324365" tabindex="0" loading="lazy"><figcaption>uTools_1638256324365</figcaption></figure><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性：</h3><figure><img src="'+r+'" alt="uTools_1638256454841" tabindex="0" loading="lazy"><figcaption>uTools_1638256454841</figcaption></figure><p>查找表有n个关键字，则失败结点有n+1个</p><figure><img src="'+m+'" alt="uTools_1638256551359" tabindex="0" loading="lazy"><figcaption>uTools_1638256551359</figcaption></figure><p>与<code>折半查找判定树</code>的高度h有关。高度越小，查找效率越高</p>',19),h=s("p",null,[a("最好情况，平均查找长度="),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])],-1),k=s("p",null,[a("最坏情况，平均查找长度="),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("msub",null,[s("mi",null,"g"),s("mn",null,"2")]),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(log_2n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])],-1),g=s("p",null,[a("则"),s("code",null,"时间复杂度"),a("="),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("msub",null,[s("mi",null,"g"),s("mn",null,"2")]),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(log_2n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])],-1),_=[d,h,k,g];function v(b,f){return p(),i("div",null,_)}const w=o(u,[["render",v],["__file","6.3折半查找.html.vue"]]);export{w as default};
