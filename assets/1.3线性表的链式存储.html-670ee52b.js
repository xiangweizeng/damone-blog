const e=JSON.parse(`{"key":"v-76c87e17","path":"/computer-science/data-structure/01-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.3%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8.html","title":"1.3 线性表的链式存储","lang":"zh-CN","frontmatter":{"description":"1.3 线性表的链式存储 1.3.1 单链表的定义 单链表：线性表的链式存储，它是通过一组任意的存储单元来存储线性表中的数据元素，不需要使用地址连续的存储单元，因此它不要求在逻辑上相邻的两个元素在物理位置上也相邻。 1.3.2 单链表的特点 ①不能随机访问：遍历查找访问 ②存储密度不高：每个节点既要存数据元素又要存指针 ③拓展容量方便：直接用建立单链表拓展 ④插入、删除操作方便：知道位置直接插入和删除 1.3.3 单链表的实现方式","head":[["meta",{"property":"og:url","content":"https://github.com/xiangweizeng/damone-blog/computer-science/data-structure/01-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.3%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8.html"}],["meta",{"property":"og:site_name","content":"Damone's Blog"}],["meta",{"property":"og:title","content":"1.3 线性表的链式存储"}],["meta",{"property":"og:description","content":"1.3 线性表的链式存储 1.3.1 单链表的定义 单链表：线性表的链式存储，它是通过一组任意的存储单元来存储线性表中的数据元素，不需要使用地址连续的存储单元，因此它不要求在逻辑上相邻的两个元素在物理位置上也相邻。 1.3.2 单链表的特点 ①不能随机访问：遍历查找访问 ②存储密度不高：每个节点既要存数据元素又要存指针 ③拓展容量方便：直接用建立单链表拓展 ④插入、删除操作方便：知道位置直接插入和删除 1.3.3 单链表的实现方式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-23T09:58:46.000Z"}],["meta",{"property":"article:author","content":"damone"}],["meta",{"property":"article:modified_time","content":"2023-04-23T09:58:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.3 线性表的链式存储\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-23T09:58:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"damone\\",\\"url\\":\\"https://github.com/xiangweizeng\\"}]}"]]},"headers":[{"level":2,"title":"1.3.1 单链表的定义","slug":"_1-3-1-单链表的定义","link":"#_1-3-1-单链表的定义","children":[]},{"level":2,"title":"1.3.2 单链表的特点","slug":"_1-3-2-单链表的特点","link":"#_1-3-2-单链表的特点","children":[]},{"level":2,"title":"1.3.3 单链表的实现方式","slug":"_1-3-3-单链表的实现方式","link":"#_1-3-3-单链表的实现方式","children":[]},{"level":2,"title":"1.3.4 单链表上的操作","slug":"_1-3-4-单链表上的操作","link":"#_1-3-4-单链表上的操作","children":[{"level":3,"title":"单链表的类型描述","slug":"单链表的类型描述","link":"#单链表的类型描述","children":[]},{"level":3,"title":"初始化和判空","slug":"初始化和判空","link":"#初始化和判空","children":[{"level":4,"title":"不带头结点的初始化和判空","slug":"不带头结点的初始化和判空","link":"#不带头结点的初始化和判空","children":[]},{"level":4,"title":"带头结点的初始化和判空","slug":"带头结点的初始化和判空","link":"#带头结点的初始化和判空","children":[]}]},{"level":3,"title":"建立单链表","slug":"建立单链表","link":"#建立单链表","children":[{"level":4,"title":"头插法建立单链表","slug":"头插法建立单链表","link":"#头插法建立单链表","children":[]},{"level":4,"title":"尾插法建立单链表","slug":"尾插法建立单链表","link":"#尾插法建立单链表","children":[]}]},{"level":3,"title":"插入","slug":"插入","link":"#插入","children":[{"level":4,"title":"带头结点的插入","slug":"带头结点的插入","link":"#带头结点的插入","children":[]},{"level":4,"title":"不带头结点的插入","slug":"不带头结点的插入","link":"#不带头结点的插入","children":[]},{"level":4,"title":"指定结点的后插操作","slug":"指定结点的后插操作","link":"#指定结点的后插操作","children":[]},{"level":4,"title":"指定结点的前插操作","slug":"指定结点的前插操作","link":"#指定结点的前插操作","children":[]}]},{"level":3,"title":"删除","slug":"删除","link":"#删除","children":[{"level":4,"title":"按位序删除","slug":"按位序删除","link":"#按位序删除","children":[]},{"level":4,"title":"指定结点的删除","slug":"指定结点的删除","link":"#指定结点的删除","children":[]}]},{"level":3,"title":"查找","slug":"查找","link":"#查找","children":[{"level":4,"title":"按位查找","slug":"按位查找","link":"#按位查找","children":[]},{"level":4,"title":"按值查找","slug":"按值查找","link":"#按值查找","children":[]}]},{"level":3,"title":"求表长","slug":"求表长","link":"#求表长","children":[]},{"level":3,"title":"遍历","slug":"遍历","link":"#遍历","children":[]}]},{"level":2,"title":"1.3.5 完整代码","slug":"_1-3-5-完整代码","link":"#_1-3-5-完整代码","children":[{"level":3,"title":"运行结果：","slug":"运行结果","link":"#运行结果","children":[]}]}],"git":{"createdTime":1682243926000,"updatedTime":1682243926000,"contributors":[{"name":"damone","email":"826127212@qq.com","commits":1}]},"readingTime":{"minutes":6.49,"words":1947},"filePathRelative":"computer-science/data-structure/01-线性表/1.3线性表的链式存储.md","localizedDate":"2023年4月23日","excerpt":"<h1> 1.3 线性表的链式存储</h1>\\n<h2> 1.3.1 单链表的定义</h2>\\n<p><code>单链表</code>：线性表的<code>链式存储</code>，它是通过一组任意的存储单元来存储线性表中的数据元素，不需要使用地址连续的存储单元，因此它不要求在逻辑上相邻的两个元素在物理位置上也相邻。</p>\\n<h2> 1.3.2 单链表的特点</h2>\\n<p>①不能随机访问：遍历查找访问</p>\\n<p>②存储密度不高：每个节点既要存数据元素又要存指针</p>\\n<p>③拓展容量方便：直接用建立单链表拓展</p>\\n<p>④插入、删除操作方便：知道位置直接插入和删除</p>\\n<h2> 1.3.3 单链表的实现方式</h2>","autoDesc":true}`);export{e as data};
