export const data = JSON.parse("{\"key\":\"v-7dd883f5\",\"path\":\"/computer-science/data-structure/02.%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/2.1%E6%A0%88.html\",\"title\":\"2.1 栈\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"2.1 栈 2.1.1 栈的定义 栈是线性表结构的一种，但是栈结构的插入与删除操作都只能从同一端进行，所以栈结构是一种受限制的线性表结构，数据的插入与删除符合LIFO的原则（也就是后进先出，先进后出）。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/xiangweizeng/computer-science/data-structure/02.%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/2.1%E6%A0%88.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Damone's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"2.1 栈\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"2.1 栈 2.1.1 栈的定义 栈是线性表结构的一种，但是栈结构的插入与删除操作都只能从同一端进行，所以栈结构是一种受限制的线性表结构，数据的插入与删除符合LIFO的原则（也就是后进先出，先进后出）。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"damone\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"2.1 栈\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"damone\\\",\\\"url\\\":\\\"https://github.com/xiangweizeng\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"2.1.1 栈的定义\",\"slug\":\"_2-1-1-栈的定义\",\"link\":\"#_2-1-1-栈的定义\",\"children\":[]},{\"level\":2,\"title\":\"2.1.2 栈的基本操作\",\"slug\":\"_2-1-2-栈的基本操作\",\"link\":\"#_2-1-2-栈的基本操作\",\"children\":[]},{\"level\":2,\"title\":\"2.1.3 存储结构\",\"slug\":\"_2-1-3-存储结构\",\"link\":\"#_2-1-3-存储结构\",\"children\":[]},{\"level\":2,\"title\":\"2.1.4 栈分类\",\"slug\":\"_2-1-4-栈分类\",\"link\":\"#_2-1-4-栈分类\",\"children\":[]}],\"git\":{},\"readingTime\":{\"minutes\":0.96,\"words\":288},\"filePathRelative\":\"computer-science/data-structure/02.栈和队列/2.1栈.md\",\"excerpt\":\"<h1> 2.1 栈</h1>\\n<h2> 2.1.1 栈的定义</h2>\\n<p><code>栈</code>是线性表结构的一种，但是栈结构的插入与删除操作都只能从同一端进行，所以栈结构是一种受限制的线性表结构，数据的插入与删除符合LIFO的原则（也就是<code>后进先出</code>，<code>先进后出</code>）。</p>\\n<figure><img src=\\\"/images/datastruct/20200317151355505.png#pic_center\\\" alt=\\\"\\\" tabindex=\\\"0\\\" loading=\\\"lazy\\\"><figcaption></figcaption></figure>\",\"autoDesc\":true}")
