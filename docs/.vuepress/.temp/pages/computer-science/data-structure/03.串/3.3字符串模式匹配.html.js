export const data = JSON.parse("{\"key\":\"v-a63c711c\",\"path\":\"/computer-science/data-structure/03.%E4%B8%B2/3.3%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D.html\",\"title\":\"3.3 字符串模式匹配\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"3.3 字符串模式匹配 字符串模式匹配：在主串中找到与模式串相同的子串,并返回其所在位置。 子串：一定能在主串中找到的串 模式串：不一定能在主串中找到的串 方法：朴素模式匹配算法和KMP算法 3.3.1 朴素模式匹配算法 用串的定位操作： 方法：在S中依次按顺序取m长子串，判断是否与T相同\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/xiangweizeng/damone-blog/computer-science/data-structure/03.%E4%B8%B2/3.3%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Damone's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"3.3 字符串模式匹配\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"3.3 字符串模式匹配 字符串模式匹配：在主串中找到与模式串相同的子串,并返回其所在位置。 子串：一定能在主串中找到的串 模式串：不一定能在主串中找到的串 方法：朴素模式匹配算法和KMP算法 3.3.1 朴素模式匹配算法 用串的定位操作： 方法：在S中依次按顺序取m长子串，判断是否与T相同\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"damone\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"3.3 字符串模式匹配\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"damone\\\",\\\"url\\\":\\\"https://github.com/xiangweizeng\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"3.3.1 朴素模式匹配算法\",\"slug\":\"_3-3-1-朴素模式匹配算法\",\"link\":\"#_3-3-1-朴素模式匹配算法\",\"children\":[{\"level\":3,\"title\":\"用串的定位操作：\",\"slug\":\"用串的定位操作\",\"link\":\"#用串的定位操作\",\"children\":[]},{\"level\":3,\"title\":\"双指针算法\",\"slug\":\"双指针算法\",\"link\":\"#双指针算法\",\"children\":[]},{\"level\":3,\"title\":\"朴素模式匹配算法的时间复杂度：\",\"slug\":\"朴素模式匹配算法的时间复杂度\",\"link\":\"#朴素模式匹配算法的时间复杂度\",\"children\":[]}]},{\"level\":2,\"title\":\"3.3.2 KMP算法\",\"slug\":\"_3-3-2-kmp算法\",\"link\":\"#_3-3-2-kmp算法\",\"children\":[{\"level\":3,\"title\":\"KMP算法的时间复杂度：\",\"slug\":\"kmp算法的时间复杂度\",\"link\":\"#kmp算法的时间复杂度\",\"children\":[]},{\"level\":3,\"title\":\"next数组的建立\",\"slug\":\"next数组的建立\",\"link\":\"#next数组的建立\",\"children\":[]}]}],\"readingTime\":{\"minutes\":2.26,\"words\":679},\"filePathRelative\":\"computer-science/data-structure/03.串/3.3字符串模式匹配.md\",\"excerpt\":\"<h1> 3.3 字符串模式匹配</h1>\\n<p><code>字符串模式匹配</code>：在<code>主串</code>中找到与<code>模式串</code>相同的子串,并返回其所在位置。</p>\\n<p><code>子串</code>：一定能在主串中找到的串</p>\\n<p><code>模式串</code>：不一定能在主串中找到的串</p>\\n<p>方法：<code>朴素模式匹配算法</code>和<code>KMP算法</code></p>\\n<h2> 3.3.1 朴素模式匹配算法</h2>\\n<h3> 用串的定位操作：</h3>\\n<p>方法：在S中依次按顺序取m长子串，判断是否与T相同</p>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
