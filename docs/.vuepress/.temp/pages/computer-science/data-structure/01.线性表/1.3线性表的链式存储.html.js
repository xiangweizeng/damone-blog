export const data = JSON.parse("{\"key\":\"v-57d4b898\",\"path\":\"/computer-science/data-structure/01.%E7%BA%BF%E6%80%A7%E8%A1%A8/1.3%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8.html\",\"title\":\"1.3 线性表的链式存储\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"1.3 线性表的链式存储\",\"category\":[\"计算机科学\",\"数据结构\"],\"description\":\"1.3.1 单链表的定义 单链表：线性表的链式存储，它是通过一组任意的存储单元来存储线性表中的数据元素，不需要使用地址连续的存储单元，因此它不要求在逻辑上相邻的两个元素在物理位置上也相邻。 1.3.2 单链表的特点 ①不能随机访问：遍历查找访问 ②存储密度不高：每个节点既要存数据元素又要存指针 ③拓展容量方便：直接用建立单链表拓展 ④插入、删除操作方便：知道位置直接插入和删除 1.3.3 单链表的实现方式 实现方式：不带头结点和带头结点，一般带头结点比不带头结点好\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/xiangweizeng/damone-blog/computer-science/data-structure/01.%E7%BA%BF%E6%80%A7%E8%A1%A8/1.3%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Damone's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"1.3 线性表的链式存储\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1.3.1 单链表的定义 单链表：线性表的链式存储，它是通过一组任意的存储单元来存储线性表中的数据元素，不需要使用地址连续的存储单元，因此它不要求在逻辑上相邻的两个元素在物理位置上也相邻。 1.3.2 单链表的特点 ①不能随机访问：遍历查找访问 ②存储密度不高：每个节点既要存数据元素又要存指针 ③拓展容量方便：直接用建立单链表拓展 ④插入、删除操作方便：知道位置直接插入和删除 1.3.3 单链表的实现方式 实现方式：不带头结点和带头结点，一般带头结点比不带头结点好\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"damone\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"1.3 线性表的链式存储\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"damone\\\",\\\"url\\\":\\\"https://github.com/xiangweizeng\\\"}]}\"]]},\"headers\":[{\"level\":3,\"title\":\"1.3.1 单链表的定义\",\"slug\":\"_1-3-1-单链表的定义\",\"link\":\"#_1-3-1-单链表的定义\",\"children\":[]},{\"level\":3,\"title\":\"1.3.2 单链表的特点\",\"slug\":\"_1-3-2-单链表的特点\",\"link\":\"#_1-3-2-单链表的特点\",\"children\":[]},{\"level\":3,\"title\":\"1.3.3 单链表的实现方式\",\"slug\":\"_1-3-3-单链表的实现方式\",\"link\":\"#_1-3-3-单链表的实现方式\",\"children\":[]},{\"level\":3,\"title\":\"1.3.4 单链表上的操作\",\"slug\":\"_1-3-4-单链表上的操作\",\"link\":\"#_1-3-4-单链表上的操作\",\"children\":[{\"level\":4,\"title\":\"单链表的类型描述\",\"slug\":\"单链表的类型描述\",\"link\":\"#单链表的类型描述\",\"children\":[]},{\"level\":4,\"title\":\"初始化和判空\",\"slug\":\"初始化和判空\",\"link\":\"#初始化和判空\",\"children\":[]},{\"level\":4,\"title\":\"建立单链表\",\"slug\":\"建立单链表\",\"link\":\"#建立单链表\",\"children\":[]},{\"level\":4,\"title\":\"插入\",\"slug\":\"插入\",\"link\":\"#插入\",\"children\":[]},{\"level\":4,\"title\":\"删除\",\"slug\":\"删除\",\"link\":\"#删除\",\"children\":[]},{\"level\":4,\"title\":\"查找\",\"slug\":\"查找\",\"link\":\"#查找\",\"children\":[]},{\"level\":4,\"title\":\"求表长\",\"slug\":\"求表长\",\"link\":\"#求表长\",\"children\":[]},{\"level\":4,\"title\":\"遍历\",\"slug\":\"遍历\",\"link\":\"#遍历\",\"children\":[]}]},{\"level\":3,\"title\":\"1.3.5 完整代码\",\"slug\":\"_1-3-5-完整代码\",\"link\":\"#_1-3-5-完整代码\",\"children\":[{\"level\":4,\"title\":\"运行结果：\",\"slug\":\"运行结果\",\"link\":\"#运行结果\",\"children\":[]}]}],\"readingTime\":{\"minutes\":6.52,\"words\":1955},\"filePathRelative\":\"computer-science/data-structure/01.线性表/1.3线性表的链式存储.md\",\"excerpt\":\"<h3> 1.3.1 单链表的定义</h3>\\n<p><code>单链表</code>：线性表的<code>链式存储</code>，它是通过一组任意的存储单元来存储线性表中的数据元素，不需要使用地址连续的存储单元，因此它不要求在逻辑上相邻的两个元素在物理位置上也相邻。</p>\\n<h3> 1.3.2 单链表的特点</h3>\\n<p>①不能随机访问：遍历查找访问</p>\\n<p>②存储密度不高：每个节点既要存数据元素又要存指针</p>\\n<p>③拓展容量方便：直接用建立单链表拓展</p>\\n<p>④插入、删除操作方便：知道位置直接插入和删除</p>\\n<h3> 1.3.3 单链表的实现方式</h3>\\n<p>实现方式：<code>不带头结点</code>和<code>带头结点</code>，一般带头结点比不带头结点好</p>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
