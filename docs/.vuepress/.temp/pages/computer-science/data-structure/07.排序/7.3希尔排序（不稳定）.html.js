export const data = JSON.parse("{\"key\":\"v-85aa9c96\",\"path\":\"/computer-science/data-structure/07.%E6%8E%92%E5%BA%8F/7.3%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%EF%BC%88%E4%B8%8D%E7%A8%B3%E5%AE%9A%EF%BC%89.html\",\"title\":\"7.3 希尔排序\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"7.3 希尔排序 uTools_1638366303933 希尔排序又叫缩小增量排序。 1959年Shell发明，第一个突破O(n2)的排序算法，是简单插入排序的改进版。它与插入排序的不同之处在于，它会优先比较距离较远的元素。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/xiangweizeng/damone-blog/computer-science/data-structure/07.%E6%8E%92%E5%BA%8F/7.3%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%EF%BC%88%E4%B8%8D%E7%A8%B3%E5%AE%9A%EF%BC%89.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Damone's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"7.3 希尔排序\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"7.3 希尔排序 uTools_1638366303933 希尔排序又叫缩小增量排序。 1959年Shell发明，第一个突破O(n2)的排序算法，是简单插入排序的改进版。它与插入排序的不同之处在于，它会优先比较距离较远的元素。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"damone\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"7.3 希尔排序\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"damone\\\",\\\"url\\\":\\\"https://github.com/xiangweizeng\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"7.3.1 算法思想：\",\"slug\":\"_7-3-1-算法思想\",\"link\":\"#_7-3-1-算法思想\",\"children\":[]},{\"level\":2,\"title\":\"7.3.2 代码实现：\",\"slug\":\"_7-3-2-代码实现\",\"link\":\"#_7-3-2-代码实现\",\"children\":[]},{\"level\":2,\"title\":\"7.3.3 算法效率分析\",\"slug\":\"_7-3-3-算法效率分析\",\"link\":\"#_7-3-3-算法效率分析\",\"children\":[]}],\"readingTime\":{\"minutes\":1.52,\"words\":456},\"filePathRelative\":\"computer-science/data-structure/07.排序/7.3希尔排序（不稳定）.md\",\"excerpt\":\"<h1> 7.3 希尔排序</h1>\\n<figure><img src=\\\"/images/datastruct/uTools_1638366303933.png\\\" alt=\\\"uTools_1638366303933\\\" tabindex=\\\"0\\\" loading=\\\"lazy\\\"><figcaption>uTools_1638366303933</figcaption></figure>\\n<p><code>希尔排序</code>又叫<code>缩小增量排序</code>。</p>\\n<p>1959年Shell发明，第一个突破<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0641em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span></span></span></span></span><span class=\\\"mclose\\\">)</span></span></span></span>的排序算法，是<code>简单插入排序的改进版</code>。它与插入排序的不同之处在于，它会<code>优先比较距离较远的元素</code>。</p>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
