const e=JSON.parse(`{"key":"v-5d64e8d8","path":"/computer-science/data-structure/07.%E6%8E%92%E5%BA%8F/7.8%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%EF%BC%88%E7%A8%B3%E5%AE%9A%EF%BC%89.html","title":"7.8 归并排序","lang":"zh-CN","frontmatter":{"description":"7.8 归并排序 归并排序是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。 归并：把两个或多个已经有序的序列合并成一个。","head":[["meta",{"property":"og:url","content":"https://github.com/xiangweizeng/damone-blog/computer-science/data-structure/07.%E6%8E%92%E5%BA%8F/7.8%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%EF%BC%88%E7%A8%B3%E5%AE%9A%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"Damone's Blog"}],["meta",{"property":"og:title","content":"7.8 归并排序"}],["meta",{"property":"og:description","content":"7.8 归并排序 归并排序是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。 归并：把两个或多个已经有序的序列合并成一个。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"damone"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7.8 归并排序\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"damone\\",\\"url\\":\\"https://github.com/xiangweizeng\\"}]}"]]},"headers":[{"level":2,"title":"7.8.1 算法思想：","slug":"_7-8-1-算法思想","link":"#_7-8-1-算法思想","children":[]},{"level":2,"title":"7.8.2 代码实现：","slug":"_7-8-2-代码实现","link":"#_7-8-2-代码实现","children":[]},{"level":2,"title":"7.8.3算法效率分析","slug":"_7-8-3算法效率分析","link":"#_7-8-3算法效率分析","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.7,"words":511},"filePathRelative":"computer-science/data-structure/07.排序/7.8归并排序（稳定）.md","excerpt":"<h1> 7.8 归并排序</h1>\\n<figure><img src=\\"/images/datastruct/uTools_1638535460811.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<p><code>归并排序</code>是建立在归并操作上的一种有效的排序算法。该算法是采用<code>分治法</code>（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。</p>\\n<p>归并：把两个或多个已经有序的序列合并成一个。</p>","autoDesc":true}`);export{e as data};
