import{_ as n,N as s,S as a,Z as t}from"./framework-72158890.js";const p={},c=t(`<h1 id="_5-3-图的基本操作" tabindex="-1"><a class="header-anchor" href="#_5-3-图的基本操作" aria-hidden="true">#</a> 5.3 图的基本操作</h1><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">//图的基本操作</span>
<span class="token function">Adjacent</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//判断图G是否存在边&lt;x,y&gt;或(x,y)。</span>
<span class="token function">Neighbors</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//列出图G中与结点x邻接的边。</span>
<span class="token function">InsertVertex</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//在图G中插入顶点x。</span>
<span class="token function">DeleteVertex</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//从图G中删除顶点x。</span>
<span class="token function">AddEdge</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//若无向边(x,y)或有向边&lt;x,y&gt;不存在，则向图G中添加该边。</span>
<span class="token function">RemoveEdge</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//若无向边(x,y)或有向边&lt;x,y&gt;存在，则从图G中删除该边。</span>
<span class="token function">FirstNeighbor</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//求图G中顶点x的第一个邻接点，若有则返回顶点号。若x没有邻接点或图中不存在x，则返回-1。</span>
<span class="token function">NextNeighbor</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//假设图G中顶点y是顶点x的一个邻接点，返回除y之外顶点x的下一个邻接点的顶点号，若y是x的最后一个邻接点，则返回-1。</span>
<span class="token function">Get_edge_value</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//获取图G中边(x,y)或&lt;x,y&gt;对应的权值。</span>
<span class="token function">Set_edge_value</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置图G中边(x,y)或&lt;x,y&gt;对应的权值为v。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图的遍历中直接调用FirstNeighbor(G, x);和NextNeighbor(G, x, y);</p>`,3),e=[c];function o(u,i){return s(),a("div",null,e)}const k=n(p,[["render",o],["__file","5.3图的基本操作.html.vue"]]);export{k as default};
